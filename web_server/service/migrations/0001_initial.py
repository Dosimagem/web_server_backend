# Generated by Django 4.1 on 2022-09-22 18:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import functools
import uuid
import web_server.service.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Isotope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('quantity_of_analyzes', models.PositiveIntegerField(default=0, verbose_name='Amount of analysis')),
                ('remaining_of_analyzes', models.PositiveIntegerField(default=0, verbose_name='Remaning of analysis')),
                ('price', models.DecimalField(decimal_places=2, max_digits=14, verbose_name='Price')),
                ('status_payment', models.CharField(choices=[('APG', 'Aguardando pagamento'), ('CON', 'Confirmado')], default='APG', max_length=3, verbose_name='Status payment')),
                ('service_name', models.CharField(choices=[('DC', 'Dosimetria Clinica'), ('PCD', 'Dosimetria Preclinica')], max_length=3, verbose_name='Service name')),
                ('permission', models.BooleanField(default=False, verbose_name='Permission')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Calibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('calibration_name', models.CharField(max_length=24, verbose_name='Calibration Name')),
                ('syringe_activity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Syringe Activity')),
                ('residual_syringe_activity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Residual Syringe Activity')),
                ('measurement_datetime', models.DateTimeField(verbose_name='Measurement Datetime')),
                ('phantom_volume', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Phantom Volume')),
                ('acquisition_time', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Acquisition Time')),
                ('images', models.FileField(upload_to=functools.partial(web_server.service.models.upload_to, *(), **{'type': 'calibration'}), verbose_name='Calibration Images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('isotope', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to='service.isotope')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'calibration_name')},
            },
        ),
        migrations.CreateModel(
            name='PreClinicDosimetryAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('analysis_name', models.CharField(max_length=24, verbose_name='Analysis Name')),
                ('status', models.CharField(choices=[('AP', 'Verificando informações'), ('EA', 'Informações inválidas'), ('PR', 'Processando a análise'), ('CO', 'Analise conluída')], default='AP', max_length=3, verbose_name='Status')),
                ('report', models.FileField(blank=True, null=True, upload_to=functools.partial(web_server.service.models.upload_to, *(), **{'type': 'report'}), verbose_name='Report')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('injected_activity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Injected Activity')),
                ('administration_datetime', models.DateTimeField(verbose_name='Administration Datetime')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('images', models.FileField(upload_to=functools.partial(web_server.service.models.upload_to, *(), **{'type': 'preclinic_dosimetry'}), verbose_name='Images')),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preclinic_dosimetry_analysis', to='service.calibration')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preclinic_dosimetry_analysis', to='service.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preclinic_dosimetry_analysis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preclinic Dosimetry',
                'verbose_name_plural': 'Preclinic Dosimetries',
                'db_table': 'preclinic_dosimetry_analyis',
                'unique_together': {('order', 'analysis_name')},
            },
        ),
        migrations.CreateModel(
            name='ClinicDosimetryAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('analysis_name', models.CharField(max_length=24, verbose_name='Analysis Name')),
                ('status', models.CharField(choices=[('AP', 'Verificando informações'), ('EA', 'Informações inválidas'), ('PR', 'Processando a análise'), ('CO', 'Analise conluída')], default='AP', max_length=3, verbose_name='Status')),
                ('report', models.FileField(blank=True, null=True, upload_to=functools.partial(web_server.service.models.upload_to, *(), **{'type': 'report'}), verbose_name='Report')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('injected_activity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Injected Activity')),
                ('administration_datetime', models.DateTimeField(verbose_name='Administration Datetime')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('images', models.FileField(upload_to=functools.partial(web_server.service.models.upload_to, *(), **{'type': 'clinic_dosimetry'}), verbose_name='Images')),
                ('calibration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_dosimetry_analysis', to='service.calibration')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_dosimetry_analysis', to='service.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_dosimetry_analysis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic Dosimetry',
                'verbose_name_plural': 'Clinic Dosimetries',
                'db_table': 'clinic_dosimetry_analyis',
                'unique_together': {('order', 'analysis_name')},
            },
        ),
    ]
