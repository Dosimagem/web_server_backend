# Generated by Django 4.1.4 on 2023-01-28 02:20

import uuid

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models

import web_server.core.models
import web_server.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                ('email_verified', models.BooleanField(default=False, verbose_name='email_verified')),
                ('sent_verification_email', models.BooleanField(default=False)),
                ('verification_email_secret', models.TextField(default=None, null=True)),
                ('reset_password_secret', models.TextField(default=None, null=True)),
                ('sent_reset_password_email', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', web_server.core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modificatioin Date and Time')),
                (
                    'name',
                    models.CharField(
                        max_length=150,
                        validators=[
                            web_server.core.validators.validate_name_is_alpha,
                            django.core.validators.MinLengthValidator(3),
                        ],
                        verbose_name='Name',
                    ),
                ),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('clinic', models.CharField(max_length=30, verbose_name='Clinic')),
                ('role', models.CharField(max_length=30, verbose_name='Role')),
                (
                    'cpf',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=11,
                        validators=[web_server.core.validators.validate_cpf],
                        verbose_name='CPF',
                    ),
                ),
                (
                    'cnpj',
                    models.CharField(
                        blank=True,
                        default='',
                        max_length=14,
                        validators=[web_server.core.validators.validate_cnpj],
                        verbose_name='CNPJ',
                    ),
                ),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'abstract': False,
            },
        ),
    ]
