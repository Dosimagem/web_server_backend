name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
        pip-sync requirements.txt requirements.dev.txt --pip-args --no-deps

    - name: Look for auto format errors
      run:  blue --check --diff web_server

    - name: Check for import stylle
      run:  isort --profile black --check --diff web_server

    - name: Lint with flake8
      run: flake8

  tests:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        python-version: ['3.8', '3.9']

    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports: [ '5432:5432' ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
        pip-sync requirements.txt requirements.dev.txt --pip-args --no-deps

    - name: Copying configurations
      run: cp contrib/env-sample .env

    - name: Tests
      run: pytest web_server --junitxml=test-result.xml

    - name: publish junit results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: test-result.xml
        check_name: Test Result (Python ${{matrix.python-version}})
